import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the compareTriplets function below.
    static List<Integer> compareTriplets(List<Integer> a, List<Integer> b) {
        int[] a2 = new int[a.size()];
  for(int i = 0;i < a2.length;i++)
    a2[i] = a.get(i);
    int[] b2 = new int[b.size()];
  for(int i = 0;i < b2.length;i++)
    b2[i] = b.get(i);
        int a1=0,b1=0;
        for(int i=0;i<3;i++)
        {
            if(a2[i]>b2[i])
            a1++;
            else if(a2[i]<b2[i])
            b1++;
        }
    
        
        List <Integer> bullshit =  new ArrayList<Integer>();
       bullshit.add(a1);
       bullshit.add(b1);
       return bullshit;


    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> b = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = compareTriplets(a, b);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
